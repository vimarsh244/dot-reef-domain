// SPDX-License-Identifier: UNLICENSED

pragma solidity ^0.8.9;

import "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "./library/StringUtils.sol";
import "hardhat/console.sol";
import "@openzeppelin/contracts/utils/Base64.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract Domains is ERC721URIStorage, Ownable {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIds;

    using strings for *;
    string public tld;

    //declaring svg strings to create NFT images
    string svg1 =
        '<svg width="306" height="333" viewBox="0 0 306 333" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_1_2)"><rect width="306" height="333" fill="url(#paint0_linear_1_2)"/><path d="M175.103 113.056C179.127 117.076 181.322 121.792 181.551 127.316C181.691 130.68 181.672 134.104 182.387 137.376C182.827 139.391 184.208 141.441 185.753 142.959C186.728 143.915 189.061 144.583 190.281 144.151C191.428 143.744 192.123 141.791 192.627 140.396C193.043 139.241 192.891 137.908 193.079 135.538C197.055 141.242 199.132 146.191 198.186 152.042C197.672 155.219 197.126 158.468 197.354 161.638C197.464 163.169 199.329 164.591 200.399 166.063C201.342 164.586 202.435 163.169 203.167 161.607C203.574 160.74 203.377 159.628 203.467 158.437C207.752 162.326 208.471 169.595 205.883 176.45C204.382 180.426 203.188 184.556 202.471 188.708C202.224 190.139 203.837 191.847 204.6 193.428C206.307 192.325 208.946 191.534 209.52 190.051C210.581 187.312 210.432 184.168 210.878 180.426C215.058 184.229 215.976 188.672 216.657 193.231C216.929 195.047 217.326 196.848 218 198.773C214.136 203.894 209.938 208.897 205.212 213.783C204.174 211.822 203.662 209.98 203.152 208.136C201.807 203.269 196.699 199.397 192.143 199.941C192.31 200.657 192.701 201.392 192.593 202.056C192.284 203.965 192.063 205.987 191.134 207.638C190.903 208.049 187.292 207.72 186.709 206.864C185.622 205.267 185.04 202.961 185.314 201.084C185.619 198.992 187.277 197.103 188.053 195.03C190.213 189.261 187.968 182.588 182.953 179.527C182.358 181.171 182.157 183.094 181.07 184.359C179.913 185.706 177.917 186.43 176.288 187.426C175.345 186.032 173.657 184.662 173.604 183.24C173.47 179.612 173.756 175.91 174.438 172.331C175.589 166.299 173.739 161.501 168.301 158.154C162.398 154.52 157.052 150.571 155.129 143.822C155.093 143.693 154.571 143.684 153.697 143.492C153.131 144.663 152.402 145.889 151.932 147.194C150.049 152.418 152.067 156.918 154.801 161.424C158.701 167.849 157.088 172.935 150.451 176.307C146.982 178.07 144.611 177.234 143.916 173.555C143.454 171.104 143.829 168.516 143.829 165.118C142.069 167.959 139.938 170.161 139.304 172.687C138.061 177.636 137.455 182.75 136.963 187.828C136.604 191.536 135.784 194.835 132.047 196.798C128.87 198.466 126.881 197.506 126.434 194.178C126.241 192.739 126.155 191.287 125.925 188.816C120.418 195.377 120.12 201.644 121.006 208.236C121.371 210.955 121.34 213.776 120.978 216.491C120.852 217.435 119.186 218.202 118.223 219.049C117.463 218.065 116.351 217.172 116.025 216.076C115.565 214.529 115.685 212.832 115.479 210.207C111.574 216.418 111.313 218.079 112.007 229C107.176 226.658 102.345 224.315 97.1964 221.853C97.0145 219.897 97.4267 218.035 97.2362 216.229C96.5659 209.876 97.1701 203.81 101.042 197.193C101.903 200.31 101.963 202.72 103.201 204.365C104.346 205.885 106.752 206.585 108.603 207.647C109.353 205.815 110.937 203.868 110.667 202.177C110.214 199.344 108.102 196.753 107.55 193.916C106.642 189.245 106.182 184.464 106.059 179.718C106.023 178.309 107.75 176.86 109.206 174.593C110.048 176.903 110.107 178.76 111.083 179.393C113.21 180.773 115.943 182.557 118.176 182.297C121.481 181.913 122.253 178.728 121.281 175.965C120.462 173.636 118.906 171.519 117.587 169.355C112.281 160.646 115.008 150.757 123.892 146.698C124.567 146.39 125.354 146.294 126.842 145.9C126.486 147.436 125.947 148.491 126.08 149.466C126.318 151.213 126.665 153.073 127.594 154.544C127.914 155.05 130.684 155.032 131.318 154.388C132.664 153.021 134.2 151.035 134.086 149.398C133.932 147.192 132.294 145.077 131.297 142.921C128.655 137.204 130.486 130.329 135.934 126.16C136.615 128.118 136.881 130.247 138.044 131.791C138.978 133.031 141.163 134.385 142.491 134.159C143.67 133.958 145.131 131.698 145.238 130.267C145.476 127.078 145.236 123.794 144.671 120.629C143.372 113.361 145.214 107.604 152.497 103.764C158.098 100.81 162.495 96.7574 163.278 90C167.598 93.273 168.579 99.4804 166.274 104.297C165.57 105.768 164.575 107.116 163.758 108.542C160.465 114.29 160.953 117.653 166.342 121.677C167.98 122.9 171.016 124.05 172.544 123.419C174.081 122.784 174.809 119.955 175.366 117.961C175.689 116.8 174.979 115.389 174.804 113.663C174.874 113.234 175.103 113.056 175.103 113.056Z" fill="#FFC929"/><g filter="url(#filter0_d_1_2)"><path d="M97.0245 221C86.3282 214.316 77.8293 206.015 74.626 194.259C71.8048 183.904 72.5878 173.658 77.5009 163.859C78.0453 162.774 79.5915 162.102 80.6731 161.238C81.3606 162.498 82.3622 163.699 82.6677 165.031C83.2379 167.519 82.9085 170.267 83.9351 172.541C84.496 173.783 87.1895 175.066 88.6959 174.874C90.0519 174.701 92.2023 172.445 92.0793 171.274C91.7015 167.68 90.8337 164.009 89.3657 160.654C86.5461 154.209 84.9414 147.777 86.5164 140.835C87.4002 136.939 90.8806 133.323 95.1613 132.697C95.1613 134.456 95.0967 136.168 95.1746 137.875C95.3431 141.564 98.0784 143.958 102.031 143.814C106.227 143.661 108.155 141.355 107.468 137.839C106.829 134.574 105.837 131.208 104.138 128.303C99.3211 120.068 99.3557 112.072 104.685 104.184C107.448 100.094 114.068 97.5155 119.13 98.2602C118.47 100.423 117.439 102.545 117.275 104.721C117.135 106.579 115.867 109.362 119.603 109.915C122.33 110.319 126.813 107.284 126.6 104.743C126.382 102.136 125.686 99.3486 124.323 97.073C119.247 88.6001 123.022 81.468 128.107 74.571C128.973 73.3962 131.163 73.0265 133.237 72.0522C133.843 77.5848 131.807 83.5312 139.384 85.5195C145.129 79.9372 143.471 73.0665 142.442 66.7952C141.126 58.7619 144.411 51.0761 152.354 47.416C157.976 44.8256 163.509 42.0594 166.595 36.741C167.794 34.674 168.478 32.3606 169.464 30C175.303 29.9874 174.684 34.4249 175.438 37.5228C177.124 44.4433 172.927 49.8802 169.169 55.2846C163.597 63.2995 168.707 70.2638 175.976 74.0626C178.622 75.4451 182.04 72.6033 182.153 68.8721C182.25 65.6364 181.868 62.3888 181.652 58.2679C182.879 59.1575 184.016 59.6135 184.517 60.4025C189.264 67.8886 193.017 75.629 191.836 84.6298C191.556 86.7702 192.014 88.9884 191.758 91.1341C191.089 96.7498 194.416 99.8909 199.341 102.113C205.021 99.8046 202.705 95.1666 203.649 90.1583C205.178 91.3177 206.639 91.9182 207.167 92.923C208.63 95.7098 210.616 98.6332 210.739 101.56C210.986 107.403 210.63 113.362 209.559 119.125C208.757 123.438 208.827 127.171 211.659 130.952C217.569 128.091 212.442 121.951 216.859 118.659C217.571 119.275 218.955 119.897 219.23 120.799C221.64 128.685 224.339 136.419 218.806 144.462C215.997 148.546 214.566 153.52 213.172 158.253C212.515 160.482 213.413 163.089 213.631 165.831C224.847 163.372 221.855 155.696 222.59 148.44C224.258 149.364 225.814 149.763 226.521 150.693C231.465 157.2 232.577 164.461 231.753 172.232C230.714 182.035 224.886 189.863 219.174 198.142C218.322 196.516 217.923 194.744 217.649 192.957C216.963 188.472 216.039 184.1 211.829 180.359C211.379 184.04 211.529 187.134 210.461 189.829C209.883 191.288 207.226 192.066 205.506 193.152C204.738 191.596 203.113 189.915 203.362 188.507C204.085 184.422 205.287 180.359 206.799 176.446C209.405 169.702 208.68 162.55 204.365 158.724C204.275 159.896 204.473 160.989 204.063 161.843C203.326 163.38 202.225 164.773 201.276 166.227C200.198 164.779 198.32 163.38 198.209 161.873C197.979 158.754 198.53 155.557 199.047 152.432C200 146.675 197.908 141.805 193.904 136.193C193.715 138.525 193.868 139.837 193.449 140.973C192.942 142.345 192.241 144.268 191.086 144.668C189.857 145.092 187.508 144.436 186.527 143.495C184.97 142.002 183.58 139.985 183.137 138.002C182.417 134.782 182.436 131.414 182.295 128.104C182.064 122.669 179.854 118.029 175.732 113.942C175.465 113.725 175.266 113.64 175.067 113.555C175.158 113.845 175.249 114.135 175.385 114.759C175.676 116.37 176.392 117.757 176.066 118.9C175.506 120.862 174.772 123.645 173.224 124.27C171.685 124.891 168.628 123.759 166.979 122.556C161.551 118.596 161.06 115.287 164.376 109.633C165.199 108.229 166.201 106.903 166.91 105.456C169.231 100.717 168.243 94.6093 163.892 91.389C163.104 98.0376 158.676 102.025 153.036 104.931C145.701 108.71 143.846 114.373 145.154 121.524C145.724 124.638 145.965 127.87 145.725 131.008C145.618 132.415 144.146 134.639 142.959 134.837C141.621 135.059 139.421 133.727 138.481 132.507C137.309 130.988 137.042 128.893 136.355 126.966C130.869 131.068 129.025 137.832 131.686 143.458C132.69 145.579 134.34 147.66 134.495 149.83C134.61 151.441 133.063 153.395 131.707 154.74C131.068 155.373 128.279 155.392 127.957 154.893C127.022 153.446 126.671 151.616 126.432 149.897C126.298 148.938 126.841 147.9 127.199 146.389C125.701 146.776 124.908 146.871 124.228 147.174C115.282 151.168 112.536 160.898 117.879 169.466C119.207 171.595 120.774 173.678 121.599 175.97C122.578 178.688 121.801 181.822 118.472 182.2C116.224 182.455 113.472 180.7 111.33 179.343C110.346 178.719 110.287 176.893 109.438 174.62C107.972 176.85 106.233 178.275 106.27 179.662C106.394 184.332 106.857 189.036 107.771 193.631C108.327 196.423 110.454 198.972 110.91 201.76C111.182 203.423 109.587 205.339 108.832 207.141C106.968 206.097 104.544 205.408 103.391 203.912C102.144 202.294 102.084 199.922 101.217 196.856C97.3179 203.366 96.7095 209.334 97.3845 215.585C97.5764 217.362 97.1613 219.194 97.0245 221Z" fill="#F67E03"/></g><path d="M113.403 230.26C112.544 219.11 112.806 217.46 116.704 211.289C116.909 213.897 116.79 215.582 117.25 217.119C117.575 218.208 118.685 219.096 119.444 220.074C120.405 219.232 122.069 218.47 122.195 217.532C122.556 214.834 122.587 212.031 122.222 209.33C121.338 202.78 121.636 196.553 127.134 190.034C127.364 192.489 127.45 193.932 127.642 195.361C128.088 198.669 130.074 199.623 133.246 197.965C136.977 196.015 137.796 192.737 138.154 189.052C138.645 184.007 139.25 178.926 140.491 174.008C141.125 171.498 143.252 169.311 145.009 166.487C145.009 169.864 144.635 172.435 145.097 174.87C145.79 178.526 148.157 179.356 151.621 177.605C158.247 174.254 159.858 169.201 155.964 162.817C153.234 158.34 151.219 153.868 153.099 148.679C153.569 147.381 154.297 146.164 154.862 145C155.734 145.191 156.255 145.2 156.292 145.328C158.212 152.034 163.549 155.957 169.442 159.568C174.872 162.894 176.719 167.66 175.57 173.654C174.889 177.211 174.603 180.889 174.737 184.494C174.79 185.907 176.475 187.268 177.417 188.653C179.044 187.663 181.036 186.944 182.191 185.606C183.276 184.349 183.477 182.438 184.071 180.804C189.078 183.846 191.32 190.476 189.163 196.208C188.388 198.268 186.733 200.145 186.428 202.224C186.155 204.088 186.736 206.379 187.822 207.966C188.404 208.817 192.009 209.144 192.24 208.736C193.167 207.095 193.387 205.086 193.696 203.19C193.804 202.529 193.413 201.799 193.247 201.088C197.796 200.547 202.895 204.395 204.239 209.231C204.748 211.062 205.258 212.893 206 214.986C195.741 225.958 182.67 232.302 167.274 234.24C159.145 235.264 150.807 236.462 142.727 235.819C132.917 235.037 123.281 232.396 113.403 230.26Z" fill="#FAF079"/></g><defs><filter id="filter0_d_1_2" x="69" y="30" width="167" height="199" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB"><feFlood flood-opacity="0" result="BackgroundImageFix"/><feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/><feOffset dy="4"/><feGaussianBlur stdDeviation="2"/><feComposite in2="hardAlpha" operator="out"/><feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/><feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1_2"/><feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1_2" result="shape"/></filter><linearGradient id="paint0_linear_1_2" x1="153" y1="0" x2="153" y2="333" gradientUnits="userSpaceOnUse"><stop stop-color="#E68743"/><stop offset="1" stop-color="#EE0000"/></linearGradient><clipPath id="clip0_1_2"><rect width="306" height="333" fill="white"/></clipPath></defs> <text x="50%" text-anchor="middle" y="300" font-size="27" fill="white" >';
    string svg2 = "</text></svg>";

    //mappings
    mapping(string => address) public domains;
    mapping(string => string) public records;
    mapping(uint => string) public names;

    //errors
    error Unauthorized();
    error AlreadyRegistered();
    error InvalidName(string name);

    constructor(string memory _tld) payable ERC721("Lit Name Service", "LNS") {
        tld = _tld;
        console.log("%s name service deployed", _tld);
    }

    function getPrice(string calldata name) public pure returns (uint) {
        uint len = (name).toSlice().len();
        require(len > 0);
        if (len == 3) {
            return 0.002 ether;
        } else if (len == 4) {
            return 0.001 ether;
        } else {
            return 0.0005 ether;
        }
    }

    function getAllNames() public view returns (string[] memory) {
        string[] memory allNames = new string[](_tokenIds.current());
        for (uint i = 0; i < _tokenIds.current(); i++) {
            allNames[i] = names[i];
        }
        return allNames;
    }

    function valid(string calldata name) public pure returns (bool) {
        return (name).toSlice().len() >= 3 && (name).toSlice().len() <= 10;
    }

    function register(string calldata name) public payable {
        if (domains[name] != address(0)) revert AlreadyRegistered();
        if (!valid(name)) revert InvalidName(name);

        uint _price = getPrice(name);
        require(msg.value >= _price, "Matic amount is not enough");

        string memory _name = string(abi.encodePacked(name, ".", tld));
        string memory svg = string(abi.encodePacked(svg1, _name, svg2));

        uint256 newRecordId = _tokenIds.current();
        uint256 length = (name).toSlice().len();
        string memory strLen = Strings.toString(length);

        string memory json = Base64.encode(
            abi.encodePacked(
                '{"name": "',
                _name,
                '","description": "A domain on the Lit Name Service", "image": "data:image/svg+xml;base64,',
                Base64.encode(bytes(svg)),
                '","length":"',
                strLen,
                '"}'
            )
        );

        string memory finalTokenUri = string(
            abi.encodePacked("data:application/json;base64,", json)
        );

        console.log("Final token uri: ", finalTokenUri);

        _safeMint(msg.sender, newRecordId);
        _setTokenURI(newRecordId, finalTokenUri);
        domains[name] = msg.sender;
        _tokenIds.increment();
        console.log("%s has registered a domain!", msg.sender);
    }

    function getAddress(string calldata name) public view returns (address) {
        return domains[name];
    }

    function setRecord(string calldata name, string calldata record) public {
        if (msg.sender != domains[name]) revert Unauthorized();
        records[name] = record;
    }

    function getRecord(string calldata name)
        public
        view
        returns (string memory)
    {
        return records[name];
    }

    function withdraw() public onlyOwner {
        uint amount = address(this).balance;
        (bool success, ) = msg.sender.call{value: amount}("");
        require(success, "Failed to withdraw");
    }
}
